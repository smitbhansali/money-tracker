[{"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\index.js":"1","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\App.js":"2","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\styles.js":"3","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\index.js":"4","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\InfoCard.jsx":"5","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Snackbar\\Snackbar.jsx":"6","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\Main.jsx":"7","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Details\\Details.jsx":"8","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Snackbar\\styles.js":"9","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\useTransactions.js":"10","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Details\\styles.js":"11","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\constants\\categories.js":"12","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\styles.js":"13","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\List\\List.jsx":"14","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\Form\\Form.jsx":"15","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\List\\styles.js":"16","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\Form\\styles.js":"17","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\utils\\formatDate.js":"18","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\Dashboard.jsx":"19","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\SignUp\\Signup.jsx":"20","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Login\\Login.jsx":"21","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\context\\AuthContext.js":"22","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\Firebase.js":"23"},{"size":347,"mtime":1651997529466,"results":"24","hashOfConfig":"25"},{"size":653,"mtime":1651137079671,"results":"26","hashOfConfig":"25"},{"size":582,"mtime":1648790797117,"results":"27","hashOfConfig":"25"},{"size":216,"mtime":1648790797278,"results":"28","hashOfConfig":"25"},{"size":460,"mtime":1648790797241,"results":"29","hashOfConfig":"25"},{"size":797,"mtime":1648790797604,"results":"30","hashOfConfig":"25"},{"size":2326,"mtime":1652001148565,"results":"31","hashOfConfig":"25"},{"size":723,"mtime":1651997333400,"results":"32","hashOfConfig":"25"},{"size":206,"mtime":1648790797640,"results":"33","hashOfConfig":"25"},{"size":1637,"mtime":1651996837988,"results":"34","hashOfConfig":"25"},{"size":247,"mtime":1648790797343,"results":"35","hashOfConfig":"25"},{"size":1693,"mtime":1648790797677,"results":"36","hashOfConfig":"25"},{"size":514,"mtime":1648790797417,"results":"37","hashOfConfig":"25"},{"size":2160,"mtime":1652000745835,"results":"38","hashOfConfig":"25"},{"size":6192,"mtime":1652004426307,"results":"39","hashOfConfig":"25"},{"size":416,"mtime":1648790797567,"results":"40","hashOfConfig":"25"},{"size":247,"mtime":1648790797486,"results":"41","hashOfConfig":"25"},{"size":301,"mtime":1648790797795,"results":"42","hashOfConfig":"25"},{"size":1582,"mtime":1652249343197,"results":"43","hashOfConfig":"25"},{"size":1634,"mtime":1651137441843,"results":"44","hashOfConfig":"25"},{"size":1591,"mtime":1651137372089,"results":"45","hashOfConfig":"25"},{"size":1307,"mtime":1651136941226,"results":"46","hashOfConfig":"25"},{"size":543,"mtime":1651135545234,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"11zcwzq",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\index.js",[],["99","100"],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\App.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\styles.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\index.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\InfoCard.jsx",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Snackbar\\Snackbar.jsx",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\Main.jsx",["101"],"import React, { useState } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider, Button } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst ExpenseTracker = () => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const { logout, currentUser } = useAuth();\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate(\"/login\");\r\n  };\r\n  const [transactions, Settransactions] = useState([]);\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/gettransaction', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          email: currentUser.email\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      Settransactions(data);\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n  fetchData()\r\n  var total = 0;\r\n  const balance = () => {\r\n    transactions.map(transaction => {\r\n      if (transaction.type === \"Expense\") {\r\n        total = total - transaction.amount;\r\n      }\r\n      else {\r\n        total = total + transaction.amount;\r\n      }\r\n    });\r\n  }\r\n  balance();\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <Button variant=\"outlined\" color='primary' onClick={handleLogout} style={{ margin: \"5px\" }}>Signout - {currentUser.email}</Button>\r\n        <CardHeader title=\"Money Tracker\" align=\"center\" />\r\n        <CardContent>\r\n          <Typography align=\"center\" variant=\"h5\">Total Balance ${total}</Typography>\r\n          <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n            <InfoCard />\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n          <Form />\r\n        </CardContent>\r\n        <CardContent className={classes.cartContent}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <List />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Details\\Details.jsx",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Snackbar\\styles.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\useTransactions.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Details\\styles.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\constants\\categories.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\styles.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\List\\List.jsx",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\Form\\Form.jsx",["102","103"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { CSVLink } from 'react-csv';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\nimport { useAuth } from '../../../context/AuthContext';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { currentUser } = useAuth();\r\n  const [transactions, Settransactions] = useState([]);\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/gettransaction', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          email: currentUser.email\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      Settransactions(data)\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n  fetchData();\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    setFormData({ ...formData, amount: Number(formData.amount) });\r\n    addtransaction();\r\n    setFormData(initialState);\r\n  };\r\n  const addtransaction = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/addtransaction', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          email: currentUser.email,\r\n          amount: formData.amount,\r\n          category: formData.category,\r\n          type: formData.type,\r\n          date: formData.date\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n          {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth><CSVLink data={transactions} style={{ textDecoration: \"none\" }}>Download Transaction History</CSVLink></Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\List\\styles.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Main\\Form\\styles.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\utils\\formatDate.js",["104"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\Dashboard.jsx",["105","106","107","108","109","110"],"import React, { useEffect, useRef } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\nimport { useAuth } from './context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { Details, Main } from './components';\r\nimport useStyles from './styles';\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const { speechState } = useSpeechContext();\r\n    const main = useRef(null)\r\n\r\n    const executeScroll = () => main.current.scrollIntoView()\r\n    return (\r\n        <div>\r\n            <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justifyContent=\"center\" style={{ height: '100vh' }}>\r\n                <Grid item xs={12} sm={4} className={classes.mobile}>\r\n                    <Details title=\"Income\" />\r\n                </Grid>\r\n                <Grid ref={main} item xs={12} sm={3} className={classes.main}>\r\n                    <Main />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} className={classes.desktop}>\r\n                    <Details title=\"Income\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} className={classes.last}>\r\n                    <Details title=\"Expense\" />\r\n                </Grid>\r\n                <PushToTalkButtonContainer>\r\n                    <PushToTalkButton />\r\n                </PushToTalkButtonContainer>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\SignUp\\Signup.jsx",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\components\\Login\\Login.jsx",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\context\\AuthContext.js",[],"E:\\COLLEGE\\SEMESTER-6\\3IT31-mini project\\money-tracker\\src\\Firebase.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":39,"column":34,"nodeType":"117","messageId":"118","endLine":39,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":60,"column":13,"nodeType":"121","messageId":"122","endLine":60,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":115,"column":6,"nodeType":"125","endLine":115,"endColumn":15,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":1,"nodeType":"129","endLine":11,"endColumn":3},{"ruleId":"119","severity":1,"message":"130","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"131","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":21},{"ruleId":"119","severity":1,"message":"132","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":17},{"ruleId":"119","severity":1,"message":"133","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":21},{"ruleId":"119","severity":1,"message":"134","line":13,"column":13,"nodeType":"121","messageId":"122","endLine":13,"endColumn":24},{"ruleId":"119","severity":1,"message":"135","line":16,"column":11,"nodeType":"121","messageId":"122","endLine":16,"endColumn":24},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["138"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'SpeechState' is defined but never used.","'useAuth' is defined but never used.","'useNavigate' is defined but never used.","'speechState' is assigned a value but never used.","'executeScroll' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"141","text":"142"},[4036,4045],"[createTransaction, formData, segment]"]